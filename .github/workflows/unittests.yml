# This is a basic workflow to help you get started with Actions

name: Unit Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Cache Guile 3.0.2
      id: cache-guile-3-0-2
      uses: actions/cache@v1
      with:
        path: guile-3.0.2
        key: ${{ runner.os }}-guile-3-0-2

    # Runs a single command using the runners shell
    - name: Install dependencies (Ncurses)
      run: sudo apt install libncurses-dev

    - name: Install dependencies (Guile 3.0.2)
      if: steps.cache-guile-3-0-2.outputs.cache-hit != 'true'
      run: |
        sudo apt install wget
        wget https://ftp.gnu.org/gnu/guile/guile-3.0.2.tar.gz
        tar -xzf guile-3.0.2.tar.gz
        cd guile-3.0.2
        ./configure --prefix="$(PWD)/install" && make install
        wget http://download.savannah.gnu.org/releases/guile-json/guile-json-3.3.0.tar.gz
        tar -xzf guile-json-3.3.0.tar.gz
        cd guile-json-3.3.0
        ./configure --prefix="$(PWD)/../install" && make install
        cd ..
        wget https://ftp.gnu.org/gnu/guile-ncurses/guile-ncurses-3.0.tar.gz
        tar -xzf guile-ncurses-3.0.tar.gz
        cd guile-ncurses-3.0
        PKG_CONFIG_PATH="$(pwd)/../install/lib/pkgconfig" ./configure --prefix="$(PWD)/../install" CPPFLAGS=-I"$(PWD)/../install/include" LDFLAGS=-L"$(PWD)/../install/lib" && make install

    # Runs a set of commands using the runners shell
    - name: Test messages lib
      run: |
        ./guile-3.0.2/install/bin/guile --no-auto-compile test/xile-msg-spec.scm
